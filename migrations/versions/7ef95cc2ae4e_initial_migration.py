"""Initial migration

Revision ID: 7ef95cc2ae4e
Revises: 
Create Date: 2025-02-24 14:49:05.729925

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7ef95cc2ae4e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_stage_formats',
    sa.Column('format_id', sa.Integer(), nullable=False),
    sa.Column('format_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('format_id')
    )
    op.create_table('knock_out_stage_formats',
    sa.Column('format_id', sa.Integer(), nullable=False),
    sa.Column('format_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('format_id')
    )
    op.create_table('players',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('player_id'),
    sa.UniqueConstraint('name', name=op.f('uq_players_name'))
    )
    op.create_table('tournaments',
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('group_stage_format_id', sa.Integer(), nullable=True),
    sa.Column('knock_out_stage_format_id', sa.Integer(), nullable=True),
    sa.Column('advancing_players', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_stage_format_id'], ['group_stage_formats.format_id'], name=op.f('fk_tournaments_group_stage_format_id_group_stage_formats')),
    sa.ForeignKeyConstraint(['knock_out_stage_format_id'], ['knock_out_stage_formats.format_id'], name=op.f('fk_tournaments_knock_out_stage_format_id_knock_out_stage_formats')),
    sa.PrimaryKeyConstraint('tournament_id'),
    sa.UniqueConstraint('name', name=op.f('uq_tournaments_name'))
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('group_number', sa.Integer(), server_default='1', nullable=False),
    sa.Column('group_name', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.tournament_id'], name=op.f('fk_groups_tournament_id_tournaments')),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('rounds',
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.tournament_id'], name=op.f('fk_rounds_tournament_id_tournaments')),
    sa.PrimaryKeyConstraint('round_id')
    )
    op.create_table('group_players',
    sa.Column('group_player_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], name=op.f('fk_group_players_group_id_groups')),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], name=op.f('fk_group_players_player_id_players')),
    sa.PrimaryKeyConstraint('group_player_id')
    )
    op.create_table('matches',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('player1_id', sa.Integer(), nullable=False),
    sa.Column('player2_id', sa.Integer(), nullable=False),
    sa.Column('player3_id', sa.Integer(), nullable=True),
    sa.Column('score_player1', sa.Integer(), nullable=True),
    sa.Column('score_player2', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], name=op.f('fk_matches_group_id_groups')),
    sa.ForeignKeyConstraint(['player1_id'], ['players.player_id'], name=op.f('fk_matches_player1_id_players')),
    sa.ForeignKeyConstraint(['player2_id'], ['players.player_id'], name=op.f('fk_matches_player2_id_players')),
    sa.ForeignKeyConstraint(['player3_id'], ['players.player_id'], name=op.f('fk_matches_player3_id_players')),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.round_id'], name=op.f('fk_matches_round_id_rounds')),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.tournament_id'], name=op.f('fk_matches_tournament_id_tournaments')),
    sa.ForeignKeyConstraint(['winner_id'], ['players.player_id'], name=op.f('fk_matches_winner_id_players')),
    sa.PrimaryKeyConstraint('match_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matches')
    op.drop_table('group_players')
    op.drop_table('rounds')
    op.drop_table('groups')
    op.drop_table('tournaments')
    op.drop_table('players')
    op.drop_table('knock_out_stage_formats')
    op.drop_table('group_stage_formats')
    # ### end Alembic commands ###
